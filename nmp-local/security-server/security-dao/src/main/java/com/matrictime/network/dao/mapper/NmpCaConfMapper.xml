<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.NmpCaConfMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmpCaConf">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="access_type" jdbcType="VARCHAR" property="accessType" />
    <result column="comm_ip" jdbcType="VARCHAR" property="commIp" />
    <result column="domain_name" jdbcType="VARCHAR" property="domainName" />
    <result column="port" jdbcType="VARCHAR" property="port" />
    <result column="secret_ip" jdbcType="VARCHAR" property="secretIp" />
    <result column="network_id" jdbcType="VARCHAR" property="networkId" />
    <result column="is_exist" jdbcType="BIT" property="isExist" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, access_type, comm_ip, domain_name, port, secret_ip, network_id, is_exist, create_user, 
    create_time, update_user, update_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.NmpCaConfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nmp_ca_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nmp_ca_conf
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nmp_ca_conf
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.NmpCaConfExample">
    delete from nmp_ca_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.NmpCaConf">
    insert into nmp_ca_conf (id, access_type, comm_ip, 
      domain_name, port, secret_ip, 
      network_id, is_exist, create_user, 
      create_time, update_user, update_time, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{accessType,jdbcType=VARCHAR}, #{commIp,jdbcType=VARCHAR}, 
      #{domainName,jdbcType=VARCHAR}, #{port,jdbcType=VARCHAR}, #{secretIp,jdbcType=VARCHAR}, 
      #{networkId,jdbcType=VARCHAR}, #{isExist,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.NmpCaConf">
    insert into nmp_ca_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accessType != null">
        access_type,
      </if>
      <if test="commIp != null">
        comm_ip,
      </if>
      <if test="domainName != null">
        domain_name,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="secretIp != null">
        secret_ip,
      </if>
      <if test="networkId != null">
        network_id,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accessType != null">
        #{accessType,jdbcType=VARCHAR},
      </if>
      <if test="commIp != null">
        #{commIp,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null">
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=VARCHAR},
      </if>
      <if test="secretIp != null">
        #{secretIp,jdbcType=VARCHAR},
      </if>
      <if test="networkId != null">
        #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.NmpCaConfExample" resultType="java.lang.Long">
    select count(*) from nmp_ca_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nmp_ca_conf
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accessType != null">
        access_type = #{record.accessType,jdbcType=VARCHAR},
      </if>
      <if test="record.commIp != null">
        comm_ip = #{record.commIp,jdbcType=VARCHAR},
      </if>
      <if test="record.domainName != null">
        domain_name = #{record.domainName,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=VARCHAR},
      </if>
      <if test="record.secretIp != null">
        secret_ip = #{record.secretIp,jdbcType=VARCHAR},
      </if>
      <if test="record.networkId != null">
        network_id = #{record.networkId,jdbcType=VARCHAR},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=BIT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nmp_ca_conf
    set id = #{record.id,jdbcType=BIGINT},
      access_type = #{record.accessType,jdbcType=VARCHAR},
      comm_ip = #{record.commIp,jdbcType=VARCHAR},
      domain_name = #{record.domainName,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=VARCHAR},
      secret_ip = #{record.secretIp,jdbcType=VARCHAR},
      network_id = #{record.networkId,jdbcType=VARCHAR},
      is_exist = #{record.isExist,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.NmpCaConf">
    update nmp_ca_conf
    <set>
      <if test="accessType != null">
        access_type = #{accessType,jdbcType=VARCHAR},
      </if>
      <if test="commIp != null">
        comm_ip = #{commIp,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null">
        domain_name = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=VARCHAR},
      </if>
      <if test="secretIp != null">
        secret_ip = #{secretIp,jdbcType=VARCHAR},
      </if>
      <if test="networkId != null">
        network_id = #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.NmpCaConf">
    update nmp_ca_conf
    set access_type = #{accessType,jdbcType=VARCHAR},
      comm_ip = #{commIp,jdbcType=VARCHAR},
      domain_name = #{domainName,jdbcType=VARCHAR},
      port = #{port,jdbcType=VARCHAR},
      secret_ip = #{secretIp,jdbcType=VARCHAR},
      network_id = #{networkId,jdbcType=VARCHAR},
      is_exist = #{isExist,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>