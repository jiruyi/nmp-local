<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.NmpsIpManageMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmpsIpManage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="manage_type" jdbcType="CHAR" property="manageType" />
    <result column="network_id" jdbcType="VARCHAR" property="networkId" />
    <result column="security_sever_name" jdbcType="VARCHAR" property="securitySeverName" />
    <result column="security_sever_ip" jdbcType="VARCHAR" property="securitySeverIp" />
    <result column="station_type" jdbcType="CHAR" property="stationType" />
    <result column="access_method" jdbcType="CHAR" property="accessMethod" />
    <result column="domain_name" jdbcType="VARCHAR" property="domainName" />
    <result column="public_ip" jdbcType="VARCHAR" property="publicIp" />
    <result column="public_port" jdbcType="VARCHAR" property="publicPort" />
    <result column="lan_ip" jdbcType="VARCHAR" property="lanIp" />
    <result column="receive_port" jdbcType="VARCHAR" property="receivePort" />
    <result column="send_port" jdbcType="VARCHAR" property="sendPort" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_exist" jdbcType="BIT" property="isExist" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, manage_type, network_id, security_sever_name, security_sever_ip, station_type, 
    access_method, domain_name, public_ip, public_port, lan_ip, receive_port, send_port, 
    create_user, create_time, update_user, update_time, is_exist
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.NmpsIpManageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nmps_ip_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nmps_ip_manage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nmps_ip_manage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.NmpsIpManageExample">
    delete from nmps_ip_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.NmpsIpManage">
    insert into nmps_ip_manage (id, manage_type, network_id, 
      security_sever_name, security_sever_ip, station_type, 
      access_method, domain_name, public_ip, 
      public_port, lan_ip, receive_port, 
      send_port, create_user, create_time, 
      update_user, update_time, is_exist
      )
    values (#{id,jdbcType=BIGINT}, #{manageType,jdbcType=CHAR}, #{networkId,jdbcType=VARCHAR}, 
      #{securitySeverName,jdbcType=VARCHAR}, #{securitySeverIp,jdbcType=VARCHAR}, #{stationType,jdbcType=CHAR}, 
      #{accessMethod,jdbcType=CHAR}, #{domainName,jdbcType=VARCHAR}, #{publicIp,jdbcType=VARCHAR}, 
      #{publicPort,jdbcType=VARCHAR}, #{lanIp,jdbcType=VARCHAR}, #{receivePort,jdbcType=VARCHAR}, 
      #{sendPort,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{isExist,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.NmpsIpManage">
    insert into nmps_ip_manage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="manageType != null">
        manage_type,
      </if>
      <if test="networkId != null">
        network_id,
      </if>
      <if test="securitySeverName != null">
        security_sever_name,
      </if>
      <if test="securitySeverIp != null">
        security_sever_ip,
      </if>
      <if test="stationType != null">
        station_type,
      </if>
      <if test="accessMethod != null">
        access_method,
      </if>
      <if test="domainName != null">
        domain_name,
      </if>
      <if test="publicIp != null">
        public_ip,
      </if>
      <if test="publicPort != null">
        public_port,
      </if>
      <if test="lanIp != null">
        lan_ip,
      </if>
      <if test="receivePort != null">
        receive_port,
      </if>
      <if test="sendPort != null">
        send_port,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="manageType != null">
        #{manageType,jdbcType=CHAR},
      </if>
      <if test="networkId != null">
        #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="securitySeverName != null">
        #{securitySeverName,jdbcType=VARCHAR},
      </if>
      <if test="securitySeverIp != null">
        #{securitySeverIp,jdbcType=VARCHAR},
      </if>
      <if test="stationType != null">
        #{stationType,jdbcType=CHAR},
      </if>
      <if test="accessMethod != null">
        #{accessMethod,jdbcType=CHAR},
      </if>
      <if test="domainName != null">
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="publicIp != null">
        #{publicIp,jdbcType=VARCHAR},
      </if>
      <if test="publicPort != null">
        #{publicPort,jdbcType=VARCHAR},
      </if>
      <if test="lanIp != null">
        #{lanIp,jdbcType=VARCHAR},
      </if>
      <if test="receivePort != null">
        #{receivePort,jdbcType=VARCHAR},
      </if>
      <if test="sendPort != null">
        #{sendPort,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.NmpsIpManageExample" resultType="java.lang.Long">
    select count(*) from nmps_ip_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nmps_ip_manage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.manageType != null">
        manage_type = #{record.manageType,jdbcType=CHAR},
      </if>
      <if test="record.networkId != null">
        network_id = #{record.networkId,jdbcType=VARCHAR},
      </if>
      <if test="record.securitySeverName != null">
        security_sever_name = #{record.securitySeverName,jdbcType=VARCHAR},
      </if>
      <if test="record.securitySeverIp != null">
        security_sever_ip = #{record.securitySeverIp,jdbcType=VARCHAR},
      </if>
      <if test="record.stationType != null">
        station_type = #{record.stationType,jdbcType=CHAR},
      </if>
      <if test="record.accessMethod != null">
        access_method = #{record.accessMethod,jdbcType=CHAR},
      </if>
      <if test="record.domainName != null">
        domain_name = #{record.domainName,jdbcType=VARCHAR},
      </if>
      <if test="record.publicIp != null">
        public_ip = #{record.publicIp,jdbcType=VARCHAR},
      </if>
      <if test="record.publicPort != null">
        public_port = #{record.publicPort,jdbcType=VARCHAR},
      </if>
      <if test="record.lanIp != null">
        lan_ip = #{record.lanIp,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePort != null">
        receive_port = #{record.receivePort,jdbcType=VARCHAR},
      </if>
      <if test="record.sendPort != null">
        send_port = #{record.sendPort,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nmps_ip_manage
    set id = #{record.id,jdbcType=BIGINT},
      manage_type = #{record.manageType,jdbcType=CHAR},
      network_id = #{record.networkId,jdbcType=VARCHAR},
      security_sever_name = #{record.securitySeverName,jdbcType=VARCHAR},
      security_sever_ip = #{record.securitySeverIp,jdbcType=VARCHAR},
      station_type = #{record.stationType,jdbcType=CHAR},
      access_method = #{record.accessMethod,jdbcType=CHAR},
      domain_name = #{record.domainName,jdbcType=VARCHAR},
      public_ip = #{record.publicIp,jdbcType=VARCHAR},
      public_port = #{record.publicPort,jdbcType=VARCHAR},
      lan_ip = #{record.lanIp,jdbcType=VARCHAR},
      receive_port = #{record.receivePort,jdbcType=VARCHAR},
      send_port = #{record.sendPort,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_exist = #{record.isExist,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.NmpsIpManage">
    update nmps_ip_manage
    <set>
      <if test="manageType != null">
        manage_type = #{manageType,jdbcType=CHAR},
      </if>
      <if test="networkId != null">
        network_id = #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="securitySeverName != null">
        security_sever_name = #{securitySeverName,jdbcType=VARCHAR},
      </if>
      <if test="securitySeverIp != null">
        security_sever_ip = #{securitySeverIp,jdbcType=VARCHAR},
      </if>
      <if test="stationType != null">
        station_type = #{stationType,jdbcType=CHAR},
      </if>
      <if test="accessMethod != null">
        access_method = #{accessMethod,jdbcType=CHAR},
      </if>
      <if test="domainName != null">
        domain_name = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="publicIp != null">
        public_ip = #{publicIp,jdbcType=VARCHAR},
      </if>
      <if test="publicPort != null">
        public_port = #{publicPort,jdbcType=VARCHAR},
      </if>
      <if test="lanIp != null">
        lan_ip = #{lanIp,jdbcType=VARCHAR},
      </if>
      <if test="receivePort != null">
        receive_port = #{receivePort,jdbcType=VARCHAR},
      </if>
      <if test="sendPort != null">
        send_port = #{sendPort,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.NmpsIpManage">
    update nmps_ip_manage
    set manage_type = #{manageType,jdbcType=CHAR},
      network_id = #{networkId,jdbcType=VARCHAR},
      security_sever_name = #{securitySeverName,jdbcType=VARCHAR},
      security_sever_ip = #{securitySeverIp,jdbcType=VARCHAR},
      station_type = #{stationType,jdbcType=CHAR},
      access_method = #{accessMethod,jdbcType=CHAR},
      domain_name = #{domainName,jdbcType=VARCHAR},
      public_ip = #{publicIp,jdbcType=VARCHAR},
      public_port = #{publicPort,jdbcType=VARCHAR},
      lan_ip = #{lanIp,jdbcType=VARCHAR},
      receive_port = #{receivePort,jdbcType=VARCHAR},
      send_port = #{sendPort,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_exist = #{isExist,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>