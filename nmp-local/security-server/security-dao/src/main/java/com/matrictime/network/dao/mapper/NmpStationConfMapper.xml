<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.NmpStationConfMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmpStationConf">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="main_access_type" jdbcType="VARCHAR" property="mainAccessType" />
    <result column="main_comm_ip" jdbcType="VARCHAR" property="mainCommIp" />
    <result column="main_domain_name" jdbcType="VARCHAR" property="mainDomainName" />
    <result column="main_port" jdbcType="VARCHAR" property="mainPort" />
    <result column="spare_access_type" jdbcType="VARCHAR" property="spareAccessType" />
    <result column="spare_comm_ip" jdbcType="VARCHAR" property="spareCommIp" />
    <result column="spare_domain_name" jdbcType="VARCHAR" property="spareDomainName" />
    <result column="spare_port" jdbcType="VARCHAR" property="sparePort" />
    <result column="is_exist" jdbcType="BIT" property="isExist" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, main_access_type, main_comm_ip, main_domain_name, main_port, spare_access_type, 
    spare_comm_ip, spare_domain_name, spare_port, is_exist, create_user, create_time, 
    update_user, update_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.NmpStationConfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nmp_station_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nmp_station_conf
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nmp_station_conf
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.NmpStationConfExample">
    delete from nmp_station_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.NmpStationConf">
    insert into nmp_station_conf (id, main_access_type, main_comm_ip, 
      main_domain_name, main_port, spare_access_type, 
      spare_comm_ip, spare_domain_name, spare_port, 
      is_exist, create_user, create_time, 
      update_user, update_time, remark
      )
    values (#{id,jdbcType=BIGINT}, #{mainAccessType,jdbcType=VARCHAR}, #{mainCommIp,jdbcType=VARCHAR}, 
      #{mainDomainName,jdbcType=VARCHAR}, #{mainPort,jdbcType=VARCHAR}, #{spareAccessType,jdbcType=VARCHAR}, 
      #{spareCommIp,jdbcType=VARCHAR}, #{spareDomainName,jdbcType=VARCHAR}, #{sparePort,jdbcType=VARCHAR}, 
      #{isExist,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.NmpStationConf">
    insert into nmp_station_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mainAccessType != null">
        main_access_type,
      </if>
      <if test="mainCommIp != null">
        main_comm_ip,
      </if>
      <if test="mainDomainName != null">
        main_domain_name,
      </if>
      <if test="mainPort != null">
        main_port,
      </if>
      <if test="spareAccessType != null">
        spare_access_type,
      </if>
      <if test="spareCommIp != null">
        spare_comm_ip,
      </if>
      <if test="spareDomainName != null">
        spare_domain_name,
      </if>
      <if test="sparePort != null">
        spare_port,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mainAccessType != null">
        #{mainAccessType,jdbcType=VARCHAR},
      </if>
      <if test="mainCommIp != null">
        #{mainCommIp,jdbcType=VARCHAR},
      </if>
      <if test="mainDomainName != null">
        #{mainDomainName,jdbcType=VARCHAR},
      </if>
      <if test="mainPort != null">
        #{mainPort,jdbcType=VARCHAR},
      </if>
      <if test="spareAccessType != null">
        #{spareAccessType,jdbcType=VARCHAR},
      </if>
      <if test="spareCommIp != null">
        #{spareCommIp,jdbcType=VARCHAR},
      </if>
      <if test="spareDomainName != null">
        #{spareDomainName,jdbcType=VARCHAR},
      </if>
      <if test="sparePort != null">
        #{sparePort,jdbcType=VARCHAR},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.NmpStationConfExample" resultType="java.lang.Long">
    select count(*) from nmp_station_conf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nmp_station_conf
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mainAccessType != null">
        main_access_type = #{record.mainAccessType,jdbcType=VARCHAR},
      </if>
      <if test="record.mainCommIp != null">
        main_comm_ip = #{record.mainCommIp,jdbcType=VARCHAR},
      </if>
      <if test="record.mainDomainName != null">
        main_domain_name = #{record.mainDomainName,jdbcType=VARCHAR},
      </if>
      <if test="record.mainPort != null">
        main_port = #{record.mainPort,jdbcType=VARCHAR},
      </if>
      <if test="record.spareAccessType != null">
        spare_access_type = #{record.spareAccessType,jdbcType=VARCHAR},
      </if>
      <if test="record.spareCommIp != null">
        spare_comm_ip = #{record.spareCommIp,jdbcType=VARCHAR},
      </if>
      <if test="record.spareDomainName != null">
        spare_domain_name = #{record.spareDomainName,jdbcType=VARCHAR},
      </if>
      <if test="record.sparePort != null">
        spare_port = #{record.sparePort,jdbcType=VARCHAR},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=BIT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nmp_station_conf
    set id = #{record.id,jdbcType=BIGINT},
      main_access_type = #{record.mainAccessType,jdbcType=VARCHAR},
      main_comm_ip = #{record.mainCommIp,jdbcType=VARCHAR},
      main_domain_name = #{record.mainDomainName,jdbcType=VARCHAR},
      main_port = #{record.mainPort,jdbcType=VARCHAR},
      spare_access_type = #{record.spareAccessType,jdbcType=VARCHAR},
      spare_comm_ip = #{record.spareCommIp,jdbcType=VARCHAR},
      spare_domain_name = #{record.spareDomainName,jdbcType=VARCHAR},
      spare_port = #{record.sparePort,jdbcType=VARCHAR},
      is_exist = #{record.isExist,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.NmpStationConf">
    update nmp_station_conf
    <set>
      <if test="mainAccessType != null">
        main_access_type = #{mainAccessType,jdbcType=VARCHAR},
      </if>
      <if test="mainCommIp != null">
        main_comm_ip = #{mainCommIp,jdbcType=VARCHAR},
      </if>
      <if test="mainDomainName != null">
        main_domain_name = #{mainDomainName,jdbcType=VARCHAR},
      </if>
      <if test="mainPort != null">
        main_port = #{mainPort,jdbcType=VARCHAR},
      </if>
      <if test="spareAccessType != null">
        spare_access_type = #{spareAccessType,jdbcType=VARCHAR},
      </if>
      <if test="spareCommIp != null">
        spare_comm_ip = #{spareCommIp,jdbcType=VARCHAR},
      </if>
      <if test="spareDomainName != null">
        spare_domain_name = #{spareDomainName,jdbcType=VARCHAR},
      </if>
      <if test="sparePort != null">
        spare_port = #{sparePort,jdbcType=VARCHAR},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.NmpStationConf">
    update nmp_station_conf
    set main_access_type = #{mainAccessType,jdbcType=VARCHAR},
      main_comm_ip = #{mainCommIp,jdbcType=VARCHAR},
      main_domain_name = #{mainDomainName,jdbcType=VARCHAR},
      main_port = #{mainPort,jdbcType=VARCHAR},
      spare_access_type = #{spareAccessType,jdbcType=VARCHAR},
      spare_comm_ip = #{spareCommIp,jdbcType=VARCHAR},
      spare_domain_name = #{spareDomainName,jdbcType=VARCHAR},
      spare_port = #{sparePort,jdbcType=VARCHAR},
      is_exist = #{isExist,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>