<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="l_id" jdbcType="VARCHAR" property="lId" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="device_ip" jdbcType="VARCHAR" property="deviceIp" />
    <result column="login_account" jdbcType="VARCHAR" property="loginAccount" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="id_type" jdbcType="CHAR" property="idType" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="login_status" jdbcType="CHAR" property="loginStatus" />
    <result column="login_app_code" jdbcType="VARCHAR" property="loginAppCode" />
    <result column="logout_app_code" jdbcType="VARCHAR" property="logoutAppCode" />
    <result column="agree_friend" jdbcType="TINYINT" property="agreeFriend" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_exist" jdbcType="BIT" property="isExist" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, l_id, device_id, device_ip, login_account, nick_name, sex, user_type, 
    email, phone_number, id_type, id_no, password, login_status, login_app_code, logout_app_code, 
    agree_friend, status, is_exist, create_user, create_time, update_user, update_time, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.User">
    insert into user (id, user_id, l_id, 
      device_id, device_ip, login_account, 
      nick_name, sex, user_type, email, 
      phone_number, id_type, id_no, 
      password, login_status, login_app_code, 
      logout_app_code, agree_friend, status, 
      is_exist, create_user, create_time, 
      update_user, update_time, remark
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{lId,jdbcType=VARCHAR}, 
      #{deviceId,jdbcType=VARCHAR}, #{deviceIp,jdbcType=VARCHAR}, #{loginAccount,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{userType,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{idType,jdbcType=CHAR}, #{idNo,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{loginStatus,jdbcType=CHAR}, #{loginAppCode,jdbcType=VARCHAR}, 
      #{logoutAppCode,jdbcType=VARCHAR}, #{agreeFriend,jdbcType=TINYINT}, #{status,jdbcType=BIT}, 
      #{isExist,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="lId != null">
        l_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceIp != null">
        device_ip,
      </if>
      <if test="loginAccount != null">
        login_account,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="idType != null">
        id_type,
      </if>
      <if test="idNo != null">
        id_no,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginStatus != null">
        login_status,
      </if>
      <if test="loginAppCode != null">
        login_app_code,
      </if>
      <if test="logoutAppCode != null">
        logout_app_code,
      </if>
      <if test="agreeFriend != null">
        agree_friend,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="lId != null">
        #{lId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceIp != null">
        #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        #{idType,jdbcType=CHAR},
      </if>
      <if test="idNo != null">
        #{idNo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginStatus != null">
        #{loginStatus,jdbcType=CHAR},
      </if>
      <if test="loginAppCode != null">
        #{loginAppCode,jdbcType=VARCHAR},
      </if>
      <if test="logoutAppCode != null">
        #{logoutAppCode,jdbcType=VARCHAR},
      </if>
      <if test="agreeFriend != null">
        #{agreeFriend,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.lId != null">
        l_id = #{record.lId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceIp != null">
        device_ip = #{record.deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAccount != null">
        login_account = #{record.loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.idType != null">
        id_type = #{record.idType,jdbcType=CHAR},
      </if>
      <if test="record.idNo != null">
        id_no = #{record.idNo,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginStatus != null">
        login_status = #{record.loginStatus,jdbcType=CHAR},
      </if>
      <if test="record.loginAppCode != null">
        login_app_code = #{record.loginAppCode,jdbcType=VARCHAR},
      </if>
      <if test="record.logoutAppCode != null">
        logout_app_code = #{record.logoutAppCode,jdbcType=VARCHAR},
      </if>
      <if test="record.agreeFriend != null">
        agree_friend = #{record.agreeFriend,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=BIT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      l_id = #{record.lId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      device_ip = #{record.deviceIp,jdbcType=VARCHAR},
      login_account = #{record.loginAccount,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      user_type = #{record.userType,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      id_type = #{record.idType,jdbcType=CHAR},
      id_no = #{record.idNo,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      login_status = #{record.loginStatus,jdbcType=CHAR},
      login_app_code = #{record.loginAppCode,jdbcType=VARCHAR},
      logout_app_code = #{record.logoutAppCode,jdbcType=VARCHAR},
      agree_friend = #{record.agreeFriend,jdbcType=TINYINT},
      status = #{record.status,jdbcType=BIT},
      is_exist = #{record.isExist,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.User">
    update user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="lId != null">
        l_id = #{lId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceIp != null">
        device_ip = #{deviceIp,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="idType != null">
        id_type = #{idType,jdbcType=CHAR},
      </if>
      <if test="idNo != null">
        id_no = #{idNo,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginStatus != null">
        login_status = #{loginStatus,jdbcType=CHAR},
      </if>
      <if test="loginAppCode != null">
        login_app_code = #{loginAppCode,jdbcType=VARCHAR},
      </if>
      <if test="logoutAppCode != null">
        logout_app_code = #{logoutAppCode,jdbcType=VARCHAR},
      </if>
      <if test="agreeFriend != null">
        agree_friend = #{agreeFriend,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.User">
    update user
    set user_id = #{userId,jdbcType=VARCHAR},
      l_id = #{lId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=VARCHAR},
      device_ip = #{deviceIp,jdbcType=VARCHAR},
      login_account = #{loginAccount,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      user_type = #{userType,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      id_type = #{idType,jdbcType=CHAR},
      id_no = #{idNo,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      login_status = #{loginStatus,jdbcType=CHAR},
      login_app_code = #{loginAppCode,jdbcType=VARCHAR},
      logout_app_code = #{logoutAppCode,jdbcType=VARCHAR},
      agree_friend = #{agreeFriend,jdbcType=TINYINT},
      status = #{status,jdbcType=BIT},
      is_exist = #{isExist,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>