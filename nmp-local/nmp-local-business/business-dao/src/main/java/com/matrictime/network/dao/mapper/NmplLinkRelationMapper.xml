<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.NmplLinkRelationMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmplLinkRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="link_name" jdbcType="VARCHAR" property="linkName" />
    <result column="link_type" jdbcType="VARCHAR" property="linkType" />
    <result column="main_device_id" jdbcType="VARCHAR" property="mainDeviceId" />
    <result column="follow_device_id" jdbcType="VARCHAR" property="followDeviceId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="TIMESTAMP" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_exist" jdbcType="CHAR" property="isExist" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, link_name, link_type, main_device_id, follow_device_id, create_user, create_time, 
    update_user, update_time, is_exist
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.NmplLinkRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nmpl_link_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nmpl_link_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nmpl_link_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.NmplLinkRelationExample">
    delete from nmpl_link_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.NmplLinkRelation">
    insert into nmpl_link_relation (id, link_name, link_type, 
      main_device_id, follow_device_id, create_user, 
      create_time, update_user, update_time, 
      is_exist)
    values (#{id,jdbcType=BIGINT}, #{linkName,jdbcType=VARCHAR}, #{linkType,jdbcType=VARCHAR}, 
      #{mainDeviceId,jdbcType=VARCHAR}, #{followDeviceId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isExist,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.NmplLinkRelation">
    insert into nmpl_link_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkName != null">
        link_name,
      </if>
      <if test="linkType != null">
        link_type,
      </if>
      <if test="mainDeviceId != null">
        main_device_id,
      </if>
      <if test="followDeviceId != null">
        follow_device_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="linkName != null">
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkType != null">
        #{linkType,jdbcType=VARCHAR},
      </if>
      <if test="mainDeviceId != null">
        #{mainDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="followDeviceId != null">
        #{followDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.NmplLinkRelationExample" resultType="java.lang.Long">
    select count(*) from nmpl_link_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nmpl_link_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.linkName != null">
        link_name = #{record.linkName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkType != null">
        link_type = #{record.linkType,jdbcType=VARCHAR},
      </if>
      <if test="record.mainDeviceId != null">
        main_device_id = #{record.mainDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.followDeviceId != null">
        follow_device_id = #{record.followDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nmpl_link_relation
    set id = #{record.id,jdbcType=BIGINT},
      link_name = #{record.linkName,jdbcType=VARCHAR},
      link_type = #{record.linkType,jdbcType=VARCHAR},
      main_device_id = #{record.mainDeviceId,jdbcType=VARCHAR},
      follow_device_id = #{record.followDeviceId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_exist = #{record.isExist,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.NmplLinkRelation">
    update nmpl_link_relation
    <set>
      <if test="linkName != null">
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkType != null">
        link_type = #{linkType,jdbcType=VARCHAR},
      </if>
      <if test="mainDeviceId != null">
        main_device_id = #{mainDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="followDeviceId != null">
        follow_device_id = #{followDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.NmplLinkRelation">
    update nmpl_link_relation
    set link_name = #{linkName,jdbcType=VARCHAR},
      link_type = #{linkType,jdbcType=VARCHAR},
      main_device_id = #{mainDeviceId,jdbcType=VARCHAR},
      follow_device_id = #{followDeviceId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_exist = #{isExist,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertLinkRelation" parameterType="com.matrictime.network.request.LinkRelationRequest">
    insert into nmpl_link_relation (link_name, link_type,
                main_device_id, follow_device_id, create_user,
                create_time, update_user, update_time)
    values (#{linkName,jdbcType=VARCHAR},#{linkType,jdbcType=VARCHAR}, #{mainDeviceId,jdbcType=VARCHAR},
            #{followDeviceId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR},
            #{createTime,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR},
            #{updateTime,jdbcType=VARCHAR})
  </insert>
  <delete id="deleteLinkRelation" parameterType="com.matrictime.network.request.LinkRelationRequest">
    delete from nmpl_link_relation where main_device_id = #{mainDeviceId,jdbcType=VARCHAR}
           and follow_device_id = #{followDeviceId,jdbcType=VARCHAR}
  </delete>
  <update id="updateLinkRelation" parameterType="com.matrictime.network.request.LinkRelationRequest">
    update nmpl_link_relation set link_name = #{linkName,jdbcType=VARCHAR},
      link_type = #{linkType,jdbcType=VARCHAR},
      main_device_id = #{mainDeviceId,jdbcType=VARCHAR},
      follow_device_id = #{followDeviceId,jdbcType=VARCHAR}
    where id = #{id}
  </update>
  <select id="selectLinkRelation" parameterType="com.matrictime.network.request.LinkRelationRequest" resultType="com.matrictime.network.modelVo.LinkRelationVo">
    select id, link_name,link_type,main_device_id,follow_device_id,create_user from nmpl_link_relation
    <where>
      is_exist = 1
      <if test="linkName != null and linkName != ''">
        and link_name = #{linkName,jdbcType=VARCHAR}
      </if>
      <if test="linkType != null and linkType != ''">
        and link_type = #{linkType,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="selectLinkRelationStation" parameterType="com.matrictime.network.request.BaseStationInfoRequest" resultType="com.matrictime.network.modelVo.BaseStationInfoVo">
    select station_id,station_name,public_network_ip,public_network_port,lan_ip,lan_port
    from nmpl_base_station_info
  </select>
  <select id="selectLinkRelationDevice" parameterType="com.matrictime.network.request.DeviceInfoRequest" resultType="com.matrictime.network.modelVo.DeviceInfoVo">
    select device_id,device_name,public_network_ip,public_network_port,lan_ip,lan_port
    from nmpl_device_info
  </select>
</mapper>