<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.NmplConfigurationMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmplConfiguration">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="real_ip" jdbcType="VARCHAR" property="realIp" />
    <result column="real_port" jdbcType="VARCHAR" property="realPort" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="type" jdbcType="CHAR" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_id, real_ip, real_port, url, type
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.NmplConfigurationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nmpl_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nmpl_configuration
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nmpl_configuration
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.NmplConfigurationExample">
    delete from nmpl_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.NmplConfiguration">
    insert into nmpl_configuration (id, device_id, real_ip, 
      real_port, url, type)
    values (#{id,jdbcType=BIGINT}, #{deviceId,jdbcType=VARCHAR}, #{realIp,jdbcType=VARCHAR}, 
      #{realPort,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{type,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.NmplConfiguration">
    insert into nmpl_configuration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="realIp != null">
        real_ip,
      </if>
      <if test="realPort != null">
        real_port,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="realIp != null">
        #{realIp,jdbcType=VARCHAR},
      </if>
      <if test="realPort != null">
        #{realPort,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.NmplConfigurationExample" resultType="java.lang.Long">
    select count(*) from nmpl_configuration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nmpl_configuration
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.realIp != null">
        real_ip = #{record.realIp,jdbcType=VARCHAR},
      </if>
      <if test="record.realPort != null">
        real_port = #{record.realPort,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nmpl_configuration
    set id = #{record.id,jdbcType=BIGINT},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      real_ip = #{record.realIp,jdbcType=VARCHAR},
      real_port = #{record.realPort,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.NmplConfiguration">
    update nmpl_configuration
    <set>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="realIp != null">
        real_ip = #{realIp,jdbcType=VARCHAR},
      </if>
      <if test="realPort != null">
        real_port = #{realPort,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.NmplConfiguration">
    update nmpl_configuration
    set device_id = #{deviceId,jdbcType=VARCHAR},
      real_ip = #{realIp,jdbcType=VARCHAR},
      real_port = #{realPort,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>