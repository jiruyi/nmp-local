<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.NmplLinkMapper">
  <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmplLink">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="link_name" jdbcType="VARCHAR" property="linkName" />
    <result column="link_type" jdbcType="SMALLINT" property="linkType" />
    <result column="main_device_id" jdbcType="VARCHAR" property="mainDeviceId" />
    <result column="main_device_type" jdbcType="CHAR" property="mainDeviceType" />
    <result column="follow_device_id" jdbcType="VARCHAR" property="followDeviceId" />
    <result column="follow_network_id" jdbcType="VARCHAR" property="followNetworkId" />
    <result column="follow_ip" jdbcType="VARCHAR" property="followIp" />
    <result column="follow_port" jdbcType="VARCHAR" property="followPort" />
    <result column="active_auth" jdbcType="BIT" property="activeAuth" />
    <result column="is_on" jdbcType="BIT" property="isOn" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_exist" jdbcType="BIT" property="isExist" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, link_name, link_type, main_device_id, main_device_type, follow_device_id, follow_network_id, 
    follow_ip, follow_port, active_auth, is_on, create_user, create_time, update_user, 
    update_time, is_exist
  </sql>
  <select id="selectByExample" parameterType="com.matrictime.network.dao.model.NmplLinkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nmpl_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nmpl_link
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nmpl_link
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.matrictime.network.dao.model.NmplLinkExample">
    delete from nmpl_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.matrictime.network.dao.model.NmplLink">
    insert into nmpl_link (id, link_name, link_type, 
      main_device_id, main_device_type, follow_device_id, 
      follow_network_id, follow_ip, follow_port, 
      active_auth, is_on, create_user, 
      create_time, update_user, update_time, 
      is_exist)
    values (#{id,jdbcType=BIGINT}, #{linkName,jdbcType=VARCHAR}, #{linkType,jdbcType=SMALLINT}, 
      #{mainDeviceId,jdbcType=VARCHAR}, #{mainDeviceType,jdbcType=CHAR}, #{followDeviceId,jdbcType=VARCHAR}, 
      #{followNetworkId,jdbcType=VARCHAR}, #{followIp,jdbcType=VARCHAR}, #{followPort,jdbcType=VARCHAR}, 
      #{activeAuth,jdbcType=BIT}, #{isOn,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isExist,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.matrictime.network.dao.model.NmplLink">
    insert into nmpl_link
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkName != null">
        link_name,
      </if>
      <if test="linkType != null">
        link_type,
      </if>
      <if test="mainDeviceId != null">
        main_device_id,
      </if>
      <if test="mainDeviceType != null">
        main_device_type,
      </if>
      <if test="followDeviceId != null">
        follow_device_id,
      </if>
      <if test="followNetworkId != null">
        follow_network_id,
      </if>
      <if test="followIp != null">
        follow_ip,
      </if>
      <if test="followPort != null">
        follow_port,
      </if>
      <if test="activeAuth != null">
        active_auth,
      </if>
      <if test="isOn != null">
        is_on,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isExist != null">
        is_exist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="linkName != null">
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkType != null">
        #{linkType,jdbcType=SMALLINT},
      </if>
      <if test="mainDeviceId != null">
        #{mainDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="mainDeviceType != null">
        #{mainDeviceType,jdbcType=CHAR},
      </if>
      <if test="followDeviceId != null">
        #{followDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="followNetworkId != null">
        #{followNetworkId,jdbcType=VARCHAR},
      </if>
      <if test="followIp != null">
        #{followIp,jdbcType=VARCHAR},
      </if>
      <if test="followPort != null">
        #{followPort,jdbcType=VARCHAR},
      </if>
      <if test="activeAuth != null">
        #{activeAuth,jdbcType=BIT},
      </if>
      <if test="isOn != null">
        #{isOn,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        #{isExist,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.matrictime.network.dao.model.NmplLinkExample" resultType="java.lang.Long">
    select count(*) from nmpl_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nmpl_link
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.linkName != null">
        link_name = #{record.linkName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkType != null">
        link_type = #{record.linkType,jdbcType=SMALLINT},
      </if>
      <if test="record.mainDeviceId != null">
        main_device_id = #{record.mainDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.mainDeviceType != null">
        main_device_type = #{record.mainDeviceType,jdbcType=CHAR},
      </if>
      <if test="record.followDeviceId != null">
        follow_device_id = #{record.followDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.followNetworkId != null">
        follow_network_id = #{record.followNetworkId,jdbcType=VARCHAR},
      </if>
      <if test="record.followIp != null">
        follow_ip = #{record.followIp,jdbcType=VARCHAR},
      </if>
      <if test="record.followPort != null">
        follow_port = #{record.followPort,jdbcType=VARCHAR},
      </if>
      <if test="record.activeAuth != null">
        active_auth = #{record.activeAuth,jdbcType=BIT},
      </if>
      <if test="record.isOn != null">
        is_on = #{record.isOn,jdbcType=BIT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isExist != null">
        is_exist = #{record.isExist,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nmpl_link
    set id = #{record.id,jdbcType=BIGINT},
      link_name = #{record.linkName,jdbcType=VARCHAR},
      link_type = #{record.linkType,jdbcType=SMALLINT},
      main_device_id = #{record.mainDeviceId,jdbcType=VARCHAR},
      main_device_type = #{record.mainDeviceType,jdbcType=CHAR},
      follow_device_id = #{record.followDeviceId,jdbcType=VARCHAR},
      follow_network_id = #{record.followNetworkId,jdbcType=VARCHAR},
      follow_ip = #{record.followIp,jdbcType=VARCHAR},
      follow_port = #{record.followPort,jdbcType=VARCHAR},
      active_auth = #{record.activeAuth,jdbcType=BIT},
      is_on = #{record.isOn,jdbcType=BIT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_exist = #{record.isExist,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.matrictime.network.dao.model.NmplLink">
    update nmpl_link
    <set>
      <if test="linkName != null">
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="linkType != null">
        link_type = #{linkType,jdbcType=SMALLINT},
      </if>
      <if test="mainDeviceId != null">
        main_device_id = #{mainDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="mainDeviceType != null">
        main_device_type = #{mainDeviceType,jdbcType=CHAR},
      </if>
      <if test="followDeviceId != null">
        follow_device_id = #{followDeviceId,jdbcType=VARCHAR},
      </if>
      <if test="followNetworkId != null">
        follow_network_id = #{followNetworkId,jdbcType=VARCHAR},
      </if>
      <if test="followIp != null">
        follow_ip = #{followIp,jdbcType=VARCHAR},
      </if>
      <if test="followPort != null">
        follow_port = #{followPort,jdbcType=VARCHAR},
      </if>
      <if test="activeAuth != null">
        active_auth = #{activeAuth,jdbcType=BIT},
      </if>
      <if test="isOn != null">
        is_on = #{isOn,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isExist != null">
        is_exist = #{isExist,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matrictime.network.dao.model.NmplLink">
    update nmpl_link
    set link_name = #{linkName,jdbcType=VARCHAR},
      link_type = #{linkType,jdbcType=SMALLINT},
      main_device_id = #{mainDeviceId,jdbcType=VARCHAR},
      main_device_type = #{mainDeviceType,jdbcType=CHAR},
      follow_device_id = #{followDeviceId,jdbcType=VARCHAR},
      follow_network_id = #{followNetworkId,jdbcType=VARCHAR},
      follow_ip = #{followIp,jdbcType=VARCHAR},
      follow_port = #{followPort,jdbcType=VARCHAR},
      active_auth = #{activeAuth,jdbcType=BIT},
      is_on = #{isOn,jdbcType=BIT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_exist = #{isExist,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>