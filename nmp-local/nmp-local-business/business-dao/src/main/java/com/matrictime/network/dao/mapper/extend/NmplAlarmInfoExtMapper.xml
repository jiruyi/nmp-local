<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.extend.NmplAlarmInfoExtMapper">

    <sql id="Base_Column_List">
        alarm_id
        , alarm_source_id, alarm_source_ip, alarm_content, alarm_level, alarm_upload_time,
    alarm_source_type, alarm_content_type, create_time, update_time
    </sql>

    <insert id="batchInsert" parameterType="com.matrictime.network.model.AlarmInfo">
        insert into nmpl_alarm_info (alarm_source_id, alarm_source_ip,
        alarm_content, alarm_level, alarm_upload_time,
        alarm_source_type, alarm_content_type) values
        <foreach collection="alarmInfoList" item="alarm" separator=",">
            (#{alarm.alarmSourceId,jdbcType=VARCHAR}, #{alarm.alarmSourceIp,jdbcType=VARCHAR},
            #{alarm.alarmContent,jdbcType=VARCHAR}, #{alarm.alarmLevel,jdbcType=CHAR},
            #{alarm.alarmUploadTime,jdbcType=TIMESTAMP},
            #{alarm.alarmSourceType,jdbcType=CHAR}, #{alarm.alarmContentType,jdbcType=CHAR})
        </foreach>
    </insert>

    <!--   查询业务系统条数 -->
    <select id="selectSysAlarmCount" resultType="map" parameterType="map">
        SELECT alarm_level as alarmLevel, COUNT(*) as countLevel
        FROM nmpl_alarm_info
        WHERE alarm_source_type = #{paramMap.alarmSourceType,jdbcType=CHAR}
          AND DATE(alarm_upload_time) >= DATE_SUB(CURDATE() , INTERVAL ${paramMap.timePicker} DAY)
          AND alarm_source_id IN
            (SELECT ${paramMap.columnName}
            FROM ${paramMap.tableName}
            WHERE relation_operator_id = #{paramMap.roId,jdbcType=VARCHAR}
          AND is_exist = '1')
        GROUP BY alarm_level;
    </select>
    <!-- 根据小区和时间范围  查询物理资源告警条数 -->
    <select id="selectPhyAlarmCount" resultType="map" parameterType="map">
        SELECT alarm_source_ip           as sourceIp,
               alarm_content_type        as contentType,
               COUNT(alarm_content_type) as typeCount
        FROM nmpl_alarm_info
        WHERE alarm_source_type = '00'
          AND DATE(alarm_upload_time) >= DATE_SUB(CURDATE(), INTERVAL ${paramMap.timePicker} DAY)
          AND alarm_source_ip IN
            ( SELECT lan_ip FROM nmpl_base_station_info WHERE relation_operator_id = #{paramMap.roId,jdbcType=VARCHAR}
             AND is_exist = '1'
             UNION
             SELECT lan_ip FROM nmpl_device_info WHERE relation_operator_id = #{paramMap.roId,jdbcType=VARCHAR}
             AND is_exist = '1' )
        GROUP BY alarm_source_ip, alarm_content_type;
    </select>
    <!-- 根据小区和日期  查询物理资源告警条数 -->
    <select id="selectPhyAlarmCountByDates" resultType="map" parameterType="map">
        SELECT alarm_source_ip           as sourceIp,
               alarm_content_type        as contentType,
               COUNT(alarm_content_type) as typeCount
        FROM  nmpl_alarm_info
        WHERE alarm_source_type = '00'
              AND DATE(alarm_upload_time) in
             <foreach collection="paramMap.dates" item="date" separator="," open="(" close=")">
                 #{date,jdbcType=DATE}
             </foreach>
              AND alarm_source_ip  = #{paramMap.ip,jdbcType=VARCHAR}
        GROUP BY alarm_source_ip, alarm_content_type;
    </select>

    <!--   查询对应小区下所有设备-->
    <select id="selectDeviceIdFromAllTables" resultType="map">
        SELECT station_id AS deviceId,station_type AS deviceType
        FROM  nmpl_base_station_info
        WHERE  station_type IN ('01','02')    AND relation_operator_id = '3' AND is_exist = '1'
        UNION
        SELECT device_id AS deviceId,device_type AS deviceType
        FROM  nmpl_device_info
        WHERE  device_type = '11'  AND relation_operator_id = '3' AND is_exist = '1'
    </select>
    <select id="selectIpFromDeviceAndStation" resultType="string" parameterType="string">

        SELECT lan_ip
         FROM nmpl_base_station_info
         WHERE relation_operator_id = #{roId,jdbcType=VARCHAR}
           AND is_exist = '1'
         UNION
         SELECT lan_ip
         FROM nmpl_device_info
         WHERE relation_operator_id = #{roId,jdbcType=VARCHAR}
           AND is_exist = '1'
    </select>

    <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmplAlarmInfo">
        <id column="alarm_id" jdbcType="BIGINT" property="alarmId"/>
        <result column="alarm_source_id" jdbcType="VARCHAR" property="alarmSourceId"/>
        <result column="alarm_source_ip" jdbcType="VARCHAR" property="alarmSourceIp"/>
        <result column="alarm_content" jdbcType="VARCHAR" property="alarmContent"/>
        <result column="alarm_level" jdbcType="CHAR" property="alarmLevel"/>
        <result column="alarm_upload_time" jdbcType="TIMESTAMP" property="alarmUploadTime"/>
        <result column="alarm_source_type" jdbcType="CHAR" property="alarmSourceType"/>
        <result column="alarm_content_type" jdbcType="CHAR" property="alarmContentType"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <select id="queryAlarmDataList" resultMap="BaseResultMap"
            parameterType="com.matrictime.network.request.AlarmDataListReq">
        SELECT *
        FROM nmpl_alarm_info
        WHERE 1=1
        <if test="alarmLevel != null and alarmLevel != ''">
            AND alarm_level = #{alarmLevel,jdbcType=VARCHAR}
        </if>
        <if test="alarmSourceIp != null and alarmSourceIp != ''">
            AND alarm_source_ip = #{alarmSourceIp,jdbcType=VARCHAR}
        </if>
        AND DATE(alarm_upload_time) >= DATE_SUB(CURDATE()
        , INTERVAL ${timePicker} DAY)
        AND alarm_source_ip IN
        (SELECT
        lan_ip
        FROM
        nmpl_base_station_info
        WHERE relation_operator_id = #{roId,jdbcType=VARCHAR}
        AND is_exist = '1'
        UNION
        SELECT
        lan_ip
        FROM
        nmpl_device_info
        WHERE relation_operator_id = #{roId,jdbcType=VARCHAR}
        AND is_exist = '1')
        order by alarm_upload_time
    </select>
</mapper>