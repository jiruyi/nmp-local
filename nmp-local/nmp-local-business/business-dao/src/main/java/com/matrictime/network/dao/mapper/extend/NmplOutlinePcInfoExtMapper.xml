<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matrictime.network.dao.mapper.extend.NmplOutlinePcInfoExtMapper">
    <resultMap id="BaseResultMap" type="com.matrictime.network.dao.model.NmplOutlinePcInfo">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
        <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="create_user" jdbcType="VARCHAR" property="createUser" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="is_exist" jdbcType="BIT" property="isExist" />
    </resultMap>

    <insert id="batchInsert" parameterType="com.matrictime.network.dao.model.NmplOutlinePcInfo">
        insert into nmpl_outline_pc_info (device_id, device_name,
                                          remark, create_user,station_network_id,swing_in, swing_out
        ) values
        <foreach collection ="list" item="pc" separator =",">
            (#{pc.deviceId,jdbcType=VARCHAR},#{pc.deviceName,jdbcType=VARCHAR}, #{pc.remark,jdbcType=VARCHAR},
             #{pc.createUser,jdbcType=VARCHAR},#{pc.stationNetworkId,jdbcType=VARCHAR},#{pc.swingIn,jdbcType=BIT}, #{pc.swingOut,jdbcType=BIT})
        </foreach >
    </insert>

</mapper>